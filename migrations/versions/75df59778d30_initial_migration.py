"""Initial migration

Revision ID: 75df59778d30
Revises:
Create Date: 2025-04-08 23:12:10.056687

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "75df59778d30"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password_hash", sa.String(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("language", sa.String(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_table(
        "activetoken",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("token_hash", sa.String(), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.Column("device_info", sa.String(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_activetoken_id"), "activetoken", ["id"], unique=False)
    op.create_index(
        op.f("ix_activetoken_token_hash"), "activetoken", ["token_hash"], unique=True
    )
    op.create_table(
        "foundpet",
        sa.Column("finder_id", sa.UUID(), nullable=False),
        sa.Column("species", sa.String(), nullable=False),
        sa.Column("photo_url", sa.String(), nullable=False),
        sa.Column("photo_path", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("location", sa.String(), nullable=False),
        sa.Column("found_date", sa.Date(), nullable=False),
        sa.Column("color", sa.String(), nullable=True),
        sa.Column("distinctive_features", sa.Text(), nullable=True),
        sa.Column("approximate_age", sa.String(), nullable=True),
        sa.Column("size", sa.String(), nullable=True),
        sa.Column("feature_vector", postgresql.BYTEA(), nullable=True),
        sa.Column(
            "detected_attributes", postgresql.JSON(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["finder_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_foundpet_id"), "foundpet", ["id"], unique=False)
    op.create_table(
        "notification",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("message", sa.Text(), nullable=False),
        sa.Column("data", postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column("is_read", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_notification_id"), "notification", ["id"], unique=False)
    op.create_table(
        "pet",
        sa.Column("owner_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("species", sa.String(), nullable=False),
        sa.Column("breed", sa.String(), nullable=True),
        sa.Column("color", sa.String(), nullable=True),
        sa.Column("age", sa.Integer(), nullable=True),
        sa.Column("gender", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("lost_date", sa.Date(), nullable=True),
        sa.Column("lost_location", sa.String(), nullable=True),
        sa.Column("lost_description", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("microchipped", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_pet_id"), "pet", ["id"], unique=False)
    op.create_table(
        "resettoken",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.Column("is_used", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_resettoken_id"), "resettoken", ["id"], unique=False)
    op.create_index(op.f("ix_resettoken_token"), "resettoken", ["token"], unique=True)
    op.create_table(
        "verificationcode",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.Column("is_used", sa.Boolean(), nullable=False),
        sa.Column(
            "code_metadata", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_verificationcode_id"), "verificationcode", ["id"], unique=False
    )
    op.create_table(
        "webhook",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("event_types", postgresql.ARRAY(sa.String()), nullable=False),
        sa.Column("secret", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_webhook_id"), "webhook", ["id"], unique=False)
    op.create_table(
        "match",
        sa.Column("lost_pet_id", sa.UUID(), nullable=False),
        sa.Column("found_pet_id", sa.UUID(), nullable=False),
        sa.Column("similarity", sa.Float(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("confirmation_date", sa.DateTime(), nullable=True),
        sa.Column(
            "matching_features", postgresql.JSON(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["found_pet_id"],
            ["foundpet.id"],
        ),
        sa.ForeignKeyConstraint(
            ["lost_pet_id"],
            ["pet.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_match_id"), "match", ["id"], unique=False)
    op.create_table(
        "petphoto",
        sa.Column("pet_id", sa.UUID(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("path", sa.String(), nullable=False),
        sa.Column("is_main", sa.Boolean(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("image_processing_status", sa.String(), nullable=False),
        sa.Column(
            "detected_attributes", postgresql.JSON(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("feature_vector", postgresql.BYTEA(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["pet_id"],
            ["pet.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_petphoto_id"), "petphoto", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_petphoto_id"), table_name="petphoto")
    op.drop_table("petphoto")
    op.drop_index(op.f("ix_match_id"), table_name="match")
    op.drop_table("match")
    op.drop_index(op.f("ix_webhook_id"), table_name="webhook")
    op.drop_table("webhook")
    op.drop_index(op.f("ix_verificationcode_id"), table_name="verificationcode")
    op.drop_table("verificationcode")
    op.drop_index(op.f("ix_resettoken_token"), table_name="resettoken")
    op.drop_index(op.f("ix_resettoken_id"), table_name="resettoken")
    op.drop_table("resettoken")
    op.drop_index(op.f("ix_pet_id"), table_name="pet")
    op.drop_table("pet")
    op.drop_index(op.f("ix_notification_id"), table_name="notification")
    op.drop_table("notification")
    op.drop_index(op.f("ix_foundpet_id"), table_name="foundpet")
    op.drop_table("foundpet")
    op.drop_index(op.f("ix_activetoken_token_hash"), table_name="activetoken")
    op.drop_index(op.f("ix_activetoken_id"), table_name="activetoken")
    op.drop_table("activetoken")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###
